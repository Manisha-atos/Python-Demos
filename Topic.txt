

5 day
attendance 70 % attendance 
assessment 
feedback 
agenda.
basic of python
data types

Day 1:
software installation 
variable, literals
operators
global and local variable

Activity:
constant in python 

Day 2:
int x=10;
print("%d",x)

print("name =%s",emp[0]);


x[0]---index 
a=[,,,,]

b=(,,,,,)


a[index]
b[index]

c={,,,,,}
d={k1:v1,k2:v2}
c[index] -- not valid 

Day 3:
a=int(input("enter a number"))
print(a)
if (a%2==0):
    print(a, " is an even number")
else:
    print(a ,"is an odd number")


a=int(input("enter a number"))
print(a)
if (a%3==0):
    if(a%5==0):
        print(a, " is andivisible by 3 and 5")
    else:
        print (a, " is divisible by 3 only")
else:
    if(a%5==0):
        print(a ,"is divisible by 5")
    else:
        print(a ," is not divisible 3 and 5")

cnt=0
a=1
while (a<=10):
    if(a%2==0):
        print(a)
        cnt+=1
    a+=1
print("count of even nos ",cnt) 



cnt=0
for a in range (1,11):
    if (a%2==0):
        print(a)
        cnt=cnt+1
print(cnt)
print('Main block')



for i in range(1,4):
    print("i=%d" %i)
    for j in range(1,4):
        if(j==2):
            continue
        print("j=%d"%j) 
    print('inside the outer for loop') 
print('end of main block')  


sequence = {"Python", "Pass", "Statement", "Placeholder"}  
for value in sequence:  
    if value == "Pass":  
        pass # leaving an empty if block using the pass keyword  
    else:  
        print("Not reached pass keyword: ", value)     



def add(a,b=2):
    sum=a+b
    return sum
def swap(a,b,c):
    print(a)
    print(b)
    print(c)
    

print(add(1,34))
swap(13,11,c=12)


def add (*args):
    sum=0
    for x in args:
        sum=sum+x
    return sum

print(add(1,2,3))
print(add(1,2,3,45,5))  
print(add(1,2,3.6))

def emp(**kargs):
    for k,v in kargs.items():
        print(k)
        print(v)
        
d1={1:"One",2:"two",3:"Three"}
emp(name="Manisha",age="33",loc='Chennai')
#emp(d1)

Day 4:


class A
{
show()
{....}

class B
show()

1.inheritance 
2.same name and same sign
 